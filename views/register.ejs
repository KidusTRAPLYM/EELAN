<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Register & Choose Avatar</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <!-- Cloudflare Turnstile -->
  <script src="https://challenges.cloudflare.com/turnstile/v0/api.js" async defer></script>
  <meta name="description" content="Join Ciphree to share your emotions, connect with others, and explore a human-centered community. Register or log in to get started." />
  <link rel="canonical" href="https://ciphree.com/register" />
  <meta name="keywords" content="Ciphree, register, login, emotional sharing, community, journal" />

  <!-- Open Graph / Facebook -->
  <meta property="og:title" content="Ciphree | Register / Login" />
  <meta property="og:description" content="Join Ciphree to share your emotions, connect with others, and explore a human-centered community." />
  <meta property="og:type" content="website" />
  <meta property="og:url" content="https://ciphree.com/register" />
  <meta property="og:image" content="https://ciphree.com/Images/ciphry.png" />

  <!-- Twitter -->
  <meta name="twitter:card" content="summary_large_image" />
  <meta name="twitter:title" content="Ciphree | Register / Login" />
  <meta name="twitter:description" content="Join Ciphree to share your emotions, connect with others, and explore a human-centered community." />
  <meta name="twitter:image" content="https://ciphree.com/Images/ciphry.png" />

  <!-- Structured data for SEO -->
  <script type="application/ld+json">
  {
    "@context": "https://schema.org",
    "@type": "WebSite",
    "name": "Ciphree",
    "url": "https://ciphree.com",
    "potentialAction": {
      "@type": "RegisterAction",
      "target": "https://ciphree.com/register",
      "name": "Register / Login"
    }
  }
  </script>
  <script async="" src="https://www.googletagmanager.com/gtag/js?id=G-MM8VSWME23"></script>
  <script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());

    gtag('config', 'G-MM8VSWME23');
  </script>
</head>
<body class="font-poppins relative h-screen overflow-hidden  flex items-center justify-center">

  <!-- Canvas background -->
  <canvas id="bg" class="fixed top-0 left-0 w-full h-full z-0 pointer-events-none"></canvas>

  <!-- Theme Toggle -->
 <!-- Theme Toggle -->
<div class="absolute top-4 right-4 z-20">
  <button id="themeToggle" class="text-2xl p-2 rounded-full border bg-white">
    <span>🌙</span>
  </button>
</div>


  <!-- Form -->
  <form id="registerForm" class="relative z-10  p-6 sm:p-8 w-full max-w-md flex flex-col gap-4" action="/register" method="Post">

    <!-- STEP 1: Inputs -->
    <section id="step1" class="flex flex-col gap-4">
      <h2 class="text-2xl font-bold text-blue-500 text-center mb-4">So let’s get started</h2>

      <input type="text" name="name" id="name" placeholder="Name" class="w-full p-3 border rounded focus:outline-blue-500 text-sm sm:text-base" maxlength="8" required />
      <p id="nameError" class="text-xs sm:text-sm text-red-500 hidden">Name is either taken or contains spaces.</p>

      <input type="password" name="password" id="password" placeholder="Password" class="w-full p-3 border rounded focus:outline-blue-500 text-sm sm:text-base" minlength="8" maxlength="16" required />
      <input type="text" name="passwordHint" id="passwordHint" placeholder="Password Hint" class="w-full p-3 border rounded focus:outline-blue-500 text-sm sm:text-base" required />

      <p class="text-xs sm:text-sm text-red-500 flex justify-center items-center">Once you set up your account, you can't change your password and password hint anytime.</p>

      <!-- Turnstile -->
      <div class="w-full max-w-xs sm:max-w-full mx-auto my-2">
        <div class="cf-turnstile" data-sitekey="0x4AAAAAABucgCimXpQ-F1Yl" data-callback="turnstileCallback"></div>
      </div>
      <input type="hidden" name="cf-turnstile-response" id="cf-turnstile-response" />

      <button type="button" id="toStep2" class="w-full bg-blue-600 hover:bg-blue-700 text-white p-3 rounded mt-2 text-sm sm:text-base">Next</button>
    </section>

    <!-- STEP 2: Avatar -->
    <section id="step2" class="hidden flex-col gap-4">
      <h2 class="text-2xl font-bold text-blue-500 text-center mb-4">Choose Your Avatar</h2>

      <div class="flex justify-center items-center gap-4">
        <label>
          <input type="radio" name="avatar" value="/Images/avatar1.png" class="hidden" checked>
          <img src="/Images/avatar1.png" class="w-24 h-24 rounded-full cursor-pointer hover:ring-4 hover:ring-blue-500">
        </label>
        <label>
          <input type="radio" name="avatar" value="Images/avatar2.png" class="hidden">
          <img src="/Images/avatar2.png" class="w-24 h-24 rounded-full cursor-pointer hover:ring-4 hover:ring-blue-500">
        </label>
        <label>
          <input type="radio" name="avatar" value="/Images/avatar3.png" class="hidden">
          <img src="/Images/avatar3.png" class="w-24 h-24 rounded-full cursor-pointer hover:ring-4 hover:ring-blue-500">
        </label>
      </div>

      <button type="submit" class="w-full bg-blue-600 hover:bg-blue-700 text-white p-3 rounded mt-4 text-sm sm:text-base">Submit</button>
    </section>

  </form>

  <script>
    // Canvas background
    const canvas = document.getElementById('bg');
    const ctx = canvas.getContext('2d');
    let w = canvas.width = window.innerWidth;
    let h = canvas.height = window.innerHeight;
    const dots = [];
    for (let i=0;i<150;i++){
      dots.push({x:Math.random()*w, y:Math.random()*h, r:Math.random()*3+1, dx:(Math.random()-0.5), dy:(Math.random()-0.5), alpha:Math.random()*0.5+0.3});
    }
    function animate(){
      ctx.clearRect(0,0,w,h);
      dots.forEach(d=>{
        ctx.beginPath();
        ctx.arc(d.x,d.y,d.r,0,Math.PI*2);
        ctx.fillStyle = `rgba(59,130,246,${d.alpha})`;
        ctx.shadowColor='#3b82f6';
        ctx.shadowBlur=10;
        ctx.fill();
        d.x+=d.dx; d.y+=d.dy;
        if(d.x<0||d.x>w) d.dx*=-1;
        if(d.y<0||d.y>h) d.dy*=-1;
      });
      requestAnimationFrame(animate);
    }
    animate();
    window.addEventListener('resize', ()=>{ w=canvas.width=window.innerWidth; h=canvas.height=window.innerHeight; });

    const themeToggle = document.getElementById("themeToggle");
const themeIcon = themeToggle.querySelector("span");

// Load saved theme
const savedTheme = localStorage.getItem("theme");
if(savedTheme){
  document.documentElement.setAttribute("data-theme", savedTheme);
  themeIcon.textContent = savedTheme === "dark" ? "☀️" : "🌙";
}

// Toggle theme
themeToggle.addEventListener("click", () => {
  const current = document.documentElement.getAttribute("data-theme");
  const next = current === "dark" ? "light" : "dark";
  document.documentElement.setAttribute("data-theme", next);
  localStorage.setItem("theme", next);
  themeIcon.textContent = next === "dark" ? "☀️" : "🌙";
});

    // Name validation via server
    const nameInput = document.getElementById('name');
    const nameError = document.getElementById('nameError');
    const toStep2 = document.getElementById('toStep2');

    async function checkName(name){
      if(!name) return true;
      try{
        const res = await fetch(`/check-name?name=${encodeURIComponent(name)}`);
        const data = await res.json();
        return data.exists; // true if name exists
      }catch(err){ console.error(err); return false; }
    }

    toStep2.addEventListener('click', async ()=>{
  const nameVal = nameInput.value.trim();

  if(!nameVal){
    nameError.classList.remove('hidden');
    return;
  }

  const exists = await checkName(nameVal);
  if(exists){
    nameError.classList.remove('hidden');
    return;
  } else {
    nameError.classList.add('hidden');
  }

  // Skip Turnstile check temporarily for testing
  // const turnstileResp = document.getElementById('cf-turnstile-response').value;
  // if(!turnstileResp){ alert("Please verify you are not a bot."); return; }

  document.getElementById('step1').classList.add('hidden');
  document.getElementById('step2').classList.remove('hidden');
});

    // Avatar selection highlight
    document.querySelectorAll('input[name="avatar"]').forEach(input=>{
      input.addEventListener('change', ()=>{
        document.querySelectorAll('input[name="avatar"]').forEach(a=>a.nextElementSibling.classList.remove('ring-4','ring-blue-500'));
        input.nextElementSibling.classList.add('ring-4','ring-blue-500');
      });
    });

    // Form submit
    document.getElementById('registerForm').addEventListener('submit', e=>{
      
      window.location.href="/landing";
    });

    // Turnstile
    function turnstileCallback(token){
      document.getElementById('cf-turnstile-response').value = token;
    }
  </script>

  <style>
    body{background-color: var(--White--);}
    body{
       background-color: var(--White--);
     }
     .themeToggle {
   display: flex;
   align-items: center;
   justify-content: flex-end !important;
   padding: 10px;
 }
 
 #themeToggle {
   width: 60px;
   height: 30px;
   border-radius: 30px;
   border: 1px solid var(--Black--) !important;
   background-color: var(--White--);
   position: relative;
   cursor: pointer;
   transition: background-color 0.3s ease;
 }
 
 #themeToggle .switch {
   position: absolute;
   top: 3px;
   left: 3px;
   width: 24px;
   height: 24px;
   background-color: var(--White--);
   border-radius: 50%;
   transition: transform 0.3s ease;
 }
 
 [data-theme="dark"] #themeToggle {
   background-color: var(--Blue--);
 }
 
 [data-theme="dark"] #themeToggle .switch {
   transform: translateX(30px);
 }
 body {
  transition: background-color 0.3s, color 0.3s;
}
[data-theme="light"] body {
  background-color: #ffffff;
  color: #000000;
}
[data-theme="dark"] body {
  background-color: #1f2937;
  color: #ffffff;
}

  </style>
</body>
</html>
