<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Ciphree | Journal</title>
    <link rel="stylesheet" href="/CSS/variables.css" />
    <link rel="stylesheet" href="/CSS/main.css" />
   <link rel="stylesheet" href="/CSS/post.css">
    <link rel="stylesheet" href="/CSS/journal.css" />
      <link rel="icon" href="/Images/ciphry.png">
    <!--FONT FAMILY-->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
 <link href="https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap" rel="stylesheet">
<!-- Description -->
<meta name="description" content="Your personal journaling space on Ciphree. Reflect, write, and track your emotions securely and privately.">

<!-- Canonical URL -->
<link rel="canonical" href="https://ciphree.com/journal">

<!-- Keywords -->
<meta name="keywords" content="Ciphree, journal, write feelings, private journaling, mental health, track emotions">

<!-- Open Graph / Facebook -->
<meta property="og:title" content="Ciphree ‚Äî Your Private Journal">
<meta property="og:description" content="Reflect, write, and track your emotions securely and privately on Ciphree.">
<meta property="og:type" content="website">
<meta property="og:url" content="https://ciphree.com/journal">
<meta property="og:image" content="https://ciphree.com/Images/ciphry.png">
<meta property="og:site_name" content="Ciphree">

<!-- Twitter Card -->
<meta name="twitter:card" content="summary_large_image">
<meta name="twitter:title" content="Ciphree ‚Äî Your Private Journal">
<meta name="twitter:description" content="Reflect, write, and track your emotions securely and privately on Ciphree.">
<meta name="twitter:image" content="https://ciphree.com/Images/ciphry.png">

<!-- Structured Data -->
<script type="application/ld+json">
{
  "@context": "https://schema.org",
  "@type": "WebPage",
  "name": "Ciphree Journal",
  "url": "https://ciphree.com/journal",
  "description": "Your personal journaling space on Ciphree. Reflect, write, and track your emotions securely and privately."
}
</script>
<script async="" src="https://www.googletagmanager.com/gtag/js?id=G-MM8VSWME23"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-MM8VSWME23');
</script>

  </head>
  <body>
    <header>
      <div id="loader" class="loader"> 
  <div class="dot"></div>
  <div class="dot"></div>
  <div class="dot"></div>
</div>
<script>
  window.addEventListener("load", function () {
    const loader = document.getElementById("loader");
    loader.style.opacity = 0; // fade out
    setTimeout(() => {
      loader.style.display = "none"; // remove from DOM flow
    }, 400); // match with CSS transition
  });
</script>


    </header>
<%- include('partials/navigation', { currentPage: 'journal' }) %>
 <main>
  <div class="themeToggle">
    <button id="themeToggle" class="toggle">
      <span class="switch"></span>
    </button>
  </div>
    <section id="main">
      <section id="journal">
    <form action="/journal" method="post">
        <h2>Journal</h2>
        <input
          type="text"
          name="name"
          id="name"
          placeholder="Name of Journal"
        />
        <input
          type="text"
          name="date"
          id="date"
          placeholder="Name of Journal"
        />
        <textarea name="message" id="message" style="height: 212px;">Write what happened!</textarea>
        <button class="hover-btn">Submit journal</button>
        <span><%=messages%></span>
        </form>
      </section>

    </section>
         </section>
              <section id="formPost">
        <form action="/post" method="Post" class="formPost">
          <div class="up">
            <h1>Create a post</h1>
          </div>
          <div class="down">
            <textarea
              name="message"
              id="monami-input"
              maxlength="500"
              placeholder="Write your post here."
            ></textarea>
            <span>  <p id="char-count">0 / 500</p></span>
          
            <!-- Character counter display -->
          <input list="post-types" name="type" placeholder="Choose the post type" />
<datalist id="post-types">
  <option value="Articles">
  <option value="Posts">
</datalist>
<div class="btns">
     <button>Post</button>
    <a href="#"><button class="cancel" type="button">Cancel</button></a>
</div>

        </form>
      </section>
    <script>
  const textarea = document.getElementById("monami-input");
  const charCount = document.getElementById("char-count");
  const typeInput = document.querySelector('input[name="type"]');

  // Initial character counter
  textarea.addEventListener("input", () => {
    charCount.textContent = textarea.maxLength
      ? `${textarea.value.length} / ${textarea.maxLength}`
      : `${textarea.value.length} characters`;
  });

  // Change maxlength based on post type
  typeInput.addEventListener("input", () => {
    if (typeInput.value === "Articles") {
      textarea.removeAttribute("maxlength");
    } else {
      textarea.setAttribute("maxlength", "500");
      if (textarea.value.length > 500) {
        textarea.value = textarea.value.slice(0, 500); // trim it instantly
      }
    }

    // Force update count when switching type
    charCount.textContent = textarea.maxLength
      ? `${textarea.value.length} / ${textarea.maxLength}`
      : `${textarea.value.length} characters`;
  });
</script>
<script>
  const allowed = ["Articles", "Posts"];
  typeInput.addEventListener("input", () => {
    if (!allowed.includes(typeInput.value)) {
      typeInput.setCustomValidity("Choose one of the allowed post types.");
    } else {
      typeInput.setCustomValidity("");
    }
  });
</script>
  <script>
  window.addEventListener('DOMContentLoaded', () => {
    if (window.location.hash === '#formPost') {
      history.replaceState(null, null, window.location.pathname);
    }
  });
</script>
<div id="journal-popup" class="fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-50 hidden">
  <div class="bg-white dark:bg-gray-800 p-6 rounded-2xl max-w-md w-full shadow-lg relative">
    <h2 class="text-xl font-bold mb-4 text-gray-900 dark:text-white">Note:</h2>
    <ul class="list-disc list-inside text-gray-700 dark:text-gray-300 mb-4">
      <li style="list-style: none;">All your journals are kept private, If you want to share them, create post. </li>
      
    </ul>
    <button id="popup-close" class="absolute top-3 right-3 text-gray-500 hover:text-gray-900 dark:hover:text-white text-2xl font-bold">&times;</button>
     <a href="#formPost"><button id="popup-ok" style="width: 100% !important;" class="mt-2 !w-full bg-blue-500 hover:bg-blue-600 text-white rounded py-2 transition">Create post</button></a>
    <button id="popup-ok" class="mt-2 w-full bg-blue-500 hover:bg-blue-600 text-white rounded-xl py-2 transition">Got it!</button>
  </div>
</div>

<script>
 document.addEventListener("DOMContentLoaded", () => {
  const popup = document.getElementById("journal-popup");
  const seen = localStorage.getItem("journalNoticeSeen");

  if (!seen) {
    popup.classList.add("show");
  }

  function closePopup() {
    popup.classList.remove("show");
    localStorage.setItem("journalNoticeSeen", "true");
  }

  document.getElementById("popup-close").addEventListener("click", closePopup);
  document.getElementById("popup-ok").addEventListener("click", closePopup);
});

</script>

<style>
 #journal-popup {
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.3s ease;
}
#journal-popup.show {
  opacity: 1;
  pointer-events: auto;
}
#journal-popup {
  position: fixed;
  inset: 0; /* top:0; right:0; bottom:0; left:0; */
  background-color: rgba(0,0,0,0.5); /* semi-transparent overlay */
  display: flex;
  justify-content: center;
  align-items: center;
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.3s ease;
  z-index: 9999;
}
#journal-popup.show {
  opacity: 1;
  pointer-events: auto;
}
#journal-popup > div {
  background-color: #fff; /* white box */
  color: #111;
  padding: 2rem;
  border-radius: 1.5rem;
  max-width: 400px;
  width: 90%;
  box-shadow: 0 10px 25px rgba(0,0,0,0.2);
  text-align: left;
  position: relative;
  transition: transform 0.3s ease;
}
#journal-popup.show > div {
  transform: translateY(0);
}
#popup-close {
  position: absolute;
  top: 0.5rem;
  right: 0.5rem;
  font-size: 1.5rem;
  cursor: pointer;
  background: none;
  border: none;
}
#popup-ok {
  margin-top: 1rem;
  width: 100%;
  padding: 0.5rem 0;
  background-color: #3b82f6; /* Tailwind blue-500 */
  color: #fff;
  border-radius: 1rem;
  cursor: pointer;
  border: none;
  transition: background-color 0.2s;
}
#popup-ok:hover {
  background-color: #2563eb; /* Tailwind blue-600 */
}

</style>

</main>
<script>
  const themeToggle = document.getElementById("themeToggle");
 const themeIcon = themeToggle.querySelector("span");
 
 // Load saved theme on page load
 const savedTheme = localStorage.getItem("theme");
 if (savedTheme) {
     document.documentElement.setAttribute("data-theme", savedTheme);
     themeIcon.textContent = savedTheme === "dark" ? "‚òÄÔ∏è" : "üåô";
 }
 
 // Toggle function
 themeToggle.addEventListener("click", () => {
     const currentTheme = document.documentElement.getAttribute("data-theme");
     const newTheme = currentTheme === "dark" ? "light" : "dark";
     document.documentElement.setAttribute("data-theme", newTheme);
     localStorage.setItem("theme", newTheme); // Save theme for all pages
     themeIcon.textContent = newTheme === "dark" ? "‚òÄÔ∏è" : "üåô";
 });
 
   
   </script>
   <style>
     body{
       background-color: var(--White--);
     }
     .themeToggle {
   display: flex;
   align-items: center;
   justify-content: flex-end !important;
   padding: 10px;
 }
 
 #themeToggle {
   width: 60px;
   height: 30px;
   border-radius: 30px;
   border: 1px solid var(--Black--) !important;
   background-color: var(--White--);
   position: relative;
   cursor: pointer;
   transition: background-color 0.3s ease;
 }
 
 #themeToggle .switch {
   position: absolute;
   top: 3px;
   left: 3px;
   width: 24px;
   height: 24px;
   background-color: var(--White--);
   border-radius: 50%;
   transition: transform 0.3s ease;
 }
 
 [data-theme="dark"] #themeToggle {
   background-color: var(--Blue--);
 }
 
 [data-theme="dark"] #themeToggle .switch {
   transform: translateX(30px);
 }
 
#journal input, textarea{
  background: none;
 }
 #journal textarea{
  color: var(--Black--);
 }
   
   </style>
   <script src="/Js/post.js" defer></script>
  </body>
</html>
